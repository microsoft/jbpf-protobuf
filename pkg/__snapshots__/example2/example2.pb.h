/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_EXAMPLE2_PB_H_INCLUDED
#define PB_EXAMPLE2_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _item {
    char name[30];
    bool has_val;
    uint32_t val;
} item;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define item_init_default                        {"", false, 0}
#define item_init_zero                           {"", false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define item_name_tag                            1
#define item_val_tag                             2

/* Struct field encoding specification for nanopb */
#define item_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, STRING,   name,              1) \
X(a, STATIC,   OPTIONAL, UINT32,   val,               2)
#define item_CALLBACK NULL
#define item_DEFAULT NULL

extern const pb_msgdesc_t item_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define item_fields &item_msg

/* Maximum encoded size of messages (where known) */
#define EXAMPLE2_PB_H_MAX_SIZE                   item_size
#define item_size                                37

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
