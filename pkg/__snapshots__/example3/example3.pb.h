/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_EXAMPLE3_PB_H_INCLUDED
#define PB_EXAMPLE3_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef PB_BYTES_ARRAY_T(20) obj_bytesval_t;
typedef struct _obj {
    bool bval;
    obj_bytesval_t bytesval;
    double dval;
    uint32_t f32val;
    uint64_t f64val;
    int32_t i32val;
    int64_t i64val;
    int32_t sf32val;
    int64_t sf64val;
    int32_t si32val;
    int64_t si64val;
    char sval[20];
    uint32_t ui32val;
    uint64_t ui64val;
    pb_size_t barr_count;
    bool barr[10];
    pb_size_t darr_count;
    double darr[10];
    pb_size_t f32arr_count;
    uint32_t f32arr[10];
    pb_size_t f64arr_count;
    uint64_t f64arr[10];
    pb_size_t i32arr_count;
    int32_t i32arr[10];
    pb_size_t i64arr_count;
    int64_t i64arr[10];
    pb_size_t sf32arr_count;
    int32_t sf32arr[10];
    pb_size_t sf64arr_count;
    int64_t sf64arr[10];
    pb_size_t si32arr_count;
    int32_t si32arr[10];
    pb_size_t si64arr_count;
    int64_t si64arr[10];
    pb_size_t ui32arr_count;
    uint32_t ui32arr[10];
    pb_size_t ui64arr_count;
    uint64_t ui64arr[10];
} obj;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define obj_init_default                         {0, {0, {0}}, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define obj_init_zero                            {0, {0, {0}}, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}

/* Field tags (for use in manual encoding/decoding) */
#define obj_bval_tag                             1
#define obj_bytesval_tag                         2
#define obj_dval_tag                             3
#define obj_f32val_tag                           4
#define obj_f64val_tag                           5
#define obj_i32val_tag                           6
#define obj_i64val_tag                           7
#define obj_sf32val_tag                          8
#define obj_sf64val_tag                          9
#define obj_si32val_tag                          10
#define obj_si64val_tag                          11
#define obj_sval_tag                             12
#define obj_ui32val_tag                          13
#define obj_ui64val_tag                          14
#define obj_barr_tag                             15
#define obj_darr_tag                             16
#define obj_f32arr_tag                           17
#define obj_f64arr_tag                           18
#define obj_i32arr_tag                           19
#define obj_i64arr_tag                           20
#define obj_sf32arr_tag                          21
#define obj_sf64arr_tag                          22
#define obj_si32arr_tag                          23
#define obj_si64arr_tag                          24
#define obj_ui32arr_tag                          25
#define obj_ui64arr_tag                          26

/* Struct field encoding specification for nanopb */
#define obj_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, BOOL,     bval,              1) \
X(a, STATIC,   REQUIRED, BYTES,    bytesval,          2) \
X(a, STATIC,   REQUIRED, DOUBLE,   dval,              3) \
X(a, STATIC,   REQUIRED, FIXED32,  f32val,            4) \
X(a, STATIC,   REQUIRED, FIXED64,  f64val,            5) \
X(a, STATIC,   REQUIRED, INT32,    i32val,            6) \
X(a, STATIC,   REQUIRED, INT64,    i64val,            7) \
X(a, STATIC,   REQUIRED, SFIXED32, sf32val,           8) \
X(a, STATIC,   REQUIRED, SFIXED64, sf64val,           9) \
X(a, STATIC,   REQUIRED, SINT32,   si32val,          10) \
X(a, STATIC,   REQUIRED, SINT64,   si64val,          11) \
X(a, STATIC,   REQUIRED, STRING,   sval,             12) \
X(a, STATIC,   REQUIRED, UINT32,   ui32val,          13) \
X(a, STATIC,   REQUIRED, UINT64,   ui64val,          14) \
X(a, STATIC,   REPEATED, BOOL,     barr,             15) \
X(a, STATIC,   REPEATED, DOUBLE,   darr,             16) \
X(a, STATIC,   REPEATED, FIXED32,  f32arr,           17) \
X(a, STATIC,   REPEATED, FIXED64,  f64arr,           18) \
X(a, STATIC,   REPEATED, INT32,    i32arr,           19) \
X(a, STATIC,   REPEATED, INT64,    i64arr,           20) \
X(a, STATIC,   REPEATED, SFIXED32, sf32arr,          21) \
X(a, STATIC,   REPEATED, SFIXED64, sf64arr,          22) \
X(a, STATIC,   REPEATED, SINT32,   si32arr,          23) \
X(a, STATIC,   REPEATED, SINT64,   si64arr,          24) \
X(a, STATIC,   REPEATED, UINT32,   ui32arr,          25) \
X(a, STATIC,   REPEATED, UINT64,   ui64arr,          26)
#define obj_CALLBACK NULL
#define obj_DEFAULT NULL

extern const pb_msgdesc_t obj_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define obj_fields &obj_msg

/* Maximum encoded size of messages (where known) */
#define EXAMPLE3_PB_H_MAX_SIZE                   obj_size
#define obj_size                                 1198

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
