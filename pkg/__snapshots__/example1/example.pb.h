/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_EXAMPLE_PB_H_INCLUDED
#define PB_EXAMPLE_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _my_state {
    my_state_GOOD = 0,
    my_state_BAD = 1
} my_state;

/* Struct definitions */
typedef struct _my_struct {
    uint32_t a_num;
    bool has_another_num;
    uint32_t another_num;
} my_struct;

typedef struct _request {
    uint32_t id;
    char name[32];
    bool has_state;
    my_state state;
} request;

typedef struct _response {
    uint32_t id;
    char msg[100];
} response;

typedef struct _req_resp {
    pb_size_t which_req_or_resp;
    union _req_resp_req_or_resp {
        request req;
        response resp;
    } req_or_resp;
} req_resp;

typedef struct _status {
    uint32_t id;
    char status[100];
    my_struct a_struct;
} status;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _my_state_MIN my_state_GOOD
#define _my_state_MAX my_state_BAD
#define _my_state_ARRAYSIZE ((my_state)(my_state_BAD+1))


#define request_state_ENUMTYPE my_state





/* Initializer values for message structs */
#define my_struct_init_default                   {0, false, 0}
#define request_init_default                     {0, "", false, _my_state_MIN}
#define response_init_default                    {0, ""}
#define req_resp_init_default                    {0, {request_init_default}}
#define status_init_default                      {0, "", my_struct_init_default}
#define my_struct_init_zero                      {0, false, 0}
#define request_init_zero                        {0, "", false, _my_state_MIN}
#define response_init_zero                       {0, ""}
#define req_resp_init_zero                       {0, {request_init_zero}}
#define status_init_zero                         {0, "", my_struct_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define my_struct_a_num_tag                      1
#define my_struct_another_num_tag                2
#define request_id_tag                           1
#define request_name_tag                         2
#define request_state_tag                        3
#define response_id_tag                          1
#define response_msg_tag                         2
#define req_resp_req_tag                         1
#define req_resp_resp_tag                        2
#define status_id_tag                            1
#define status_status_tag                        2
#define status_a_struct_tag                      3

/* Struct field encoding specification for nanopb */
#define my_struct_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   a_num,             1) \
X(a, STATIC,   OPTIONAL, UINT32,   another_num,       2)
#define my_struct_CALLBACK NULL
#define my_struct_DEFAULT NULL

#define request_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   id,                1) \
X(a, STATIC,   REQUIRED, STRING,   name,              2) \
X(a, STATIC,   OPTIONAL, UENUM,    state,             3)
#define request_CALLBACK NULL
#define request_DEFAULT NULL

#define response_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   id,                1) \
X(a, STATIC,   REQUIRED, STRING,   msg,               2)
#define response_CALLBACK NULL
#define response_DEFAULT NULL

#define req_resp_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (req_or_resp,req,req_or_resp.req),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (req_or_resp,resp,req_or_resp.resp),   2)
#define req_resp_CALLBACK NULL
#define req_resp_DEFAULT NULL
#define req_resp_req_or_resp_req_MSGTYPE request
#define req_resp_req_or_resp_resp_MSGTYPE response

#define status_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   id,                1) \
X(a, STATIC,   REQUIRED, STRING,   status,            2) \
X(a, STATIC,   REQUIRED, MESSAGE,  a_struct,          3)
#define status_CALLBACK NULL
#define status_DEFAULT NULL
#define status_a_struct_MSGTYPE my_struct

extern const pb_msgdesc_t my_struct_msg;
extern const pb_msgdesc_t request_msg;
extern const pb_msgdesc_t response_msg;
extern const pb_msgdesc_t req_resp_msg;
extern const pb_msgdesc_t status_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define my_struct_fields &my_struct_msg
#define request_fields &request_msg
#define response_fields &response_msg
#define req_resp_fields &req_resp_msg
#define status_fields &status_msg

/* Maximum encoded size of messages (where known) */
#define EXAMPLE_PB_H_MAX_SIZE                    status_size
#define my_struct_size                           12
#define req_resp_size                            109
#define request_size                             41
#define response_size                            107
#define status_size                              121

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
